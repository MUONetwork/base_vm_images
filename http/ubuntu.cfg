# Locale Setup
d-i debian-installer/language string en
d-i debian-installer/country string US
d-i debian-installer/locale string en_US.UTF-8

# Keyboard Setup
d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/layoutcode string us

# Clock Setup
d-i time/zone string America/New_York

# Network Setup
d-i netcfg/get_hostname string ubuntu-template
d-i netcfg/get_domain unassigned-domain
# https://bugs.launchpad.net/ubuntu/+source/netcfg/+bug/713385
d-i netcfg/choose_interface select auto
# make sure you also add "interface=auto" to your boot command too
# https://bugs.launchpad.net/ubuntu/+source/netcfg/+bug/713385

# User Setup (REMOVE FROM HERE)
;d-i passwd/user-fullname string builder
;d-i passwd/username string builder
;d-i passwd/user-password password builder
;d-i passwd/user-password-again password builder
d-i user-setup/allow-password-weak boolean true
;d-i user-setup/encrypt-home boolean false

# Package Setup
d-i hw-detect/load_firmware boolean false
d-i hw-detect/load_media boolean false
apt-cdrom-setup apt-setup/cdrom/set-first boolean false
d-i mirror/http/proxy string
d-i pkgsel/update-policy select none
tasksel tasksel/first multiselect xubuntu-desktop
d-i pkgsel/include string ca-certificates openssh-server qemu-guest-agent python-apt unattended-upgrades
d-i pkgsel/upgrade select full-upgrade

# Drive Setup
d-i grub-installer/only_debian boolean true
d-i partman-auto/disk string /dev/sda
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman-auto/method string lvm
d-i partman-auto-lvm/new_vg_name string primary
d-i partman-auto-lvm/guided_size string max
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman-auto/choose_recipe select atomic

# Hack to install some important packages for packer to work with proxmox
ubiquity ubiquity/success_command string cp /target/etc/rc.local /target/etc/rc.local.orig; \
    nic=$(nmcli d | grep -v lo | awk 'NR>1 { print $1 }'); \
    echo "#!/bin/bash" > /target/etc/rc.local; \
    echo "" >> /target/etc/rc.local; \
    echo "touch /var/log/rclog.txt" >> /target/etc/rc.local; \
    echo "chmod 666 /var/log/rclog.txt" >> /target/etc/rc.local; \

    echo "FLAG=\"/var/log/firstboot.log\"" >> /target/etc/rc.local; \
    echo "if [ ! -f \$FLAG ]; then" >> /target/etc/rc.local; \
    echo "  connected=\$(nmcli d | grep $nic | awk '{print \$3}')" >> /target/etc/rc.local; \
    echo "  while [ \"\${connected}\" != 'connected' ]; do" >> /target/etc/rc.local; \
    echo "    sleep 2" >> /target/etc/rc.local; \
    echo "    connected=\$(nmcli d | grep $nic | awk '{print \$3}')" >> /target/etc/rc.local; \
    echo "  done" >> /target/etc/rc.local; \
    echo "  sleep 2" >> /target/etc/rc.local; \

    echo "  apt update -y > /var/log/rclog.txt 2>&1" >> /target/etc/rc.local; \
    echo "  apt install -y curl openssh-server git qemu-guest-agent wget >> /var/log/rclog.txt 2>&1" >> /target/etc/rc.local; \

    echo "  sudo systemctl restart qemu-guest-agent >> /var/log/rclog.txt 2>&1" >> /target/etc/rc.local; \
    echo "  touch \$FLAG" >> /target/etc/rc.local; \
    echo "fi" >> /target/etc/rc.local; \
    echo "exit 0" >> /target/etc/rc.local; \
    chmod +x /target/etc/rc.local; \
    echo "builder ALL=(ALL) NOPASSWD: /usr/bin/apt, /usr/bin/aptitude, /usr/bin/systemctl " >> /target/etc/sudoers

# Reboot
d-i finish-install/reboot_in_progress note
#d-i cdrom-detect/eject boolean false
ubiquity ubiquity/reboot boolean true
