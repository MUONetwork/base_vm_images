# Locale
d-i debian-installer/locale string en_GB
d-i console-setup/ask_detect boolean false
d-i console-setup/layoutcode string gb
ubiquity languagechooser/language-name select English
ubiquity countrychooser/shortlist select GB
ubiquity keyboard-configuration/layoutcode select gb
ubiquity keyboard-configuration/modelcode select pc105
ubiquity localechooser/supported-locales multiselect en_GB.UTF8
ubiquity console-keymaps-at/keymap select gb
ubiquity console-keymaps-at/variant select gb

# Partitioning
ubiquity partman-auto/disk string /dev/sda
ubiquity partman-auto/method string regular
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-auto/choose_recipe select atomic

# This makes partman automatically partition without confirmation
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Network
d-i netcfg/get_hostname string packer-test
d-i netcfg/get_domain string unassigned-domain
d-i netcfg/choose_interface select auto

# Clock
d-i time/zone string America/Vancouver

# Packages, Mirrors, Image
d-i mirror/country string US
d-i apt-setup/multiverse boolean true
d-i apt-setup/restricted boolean true
d-i apt-setup/universe boolean true

;# Install some packages
;d-i pkgsel/include string \
;    qemu-guest-agent \
;    git \
;    openssh-server \
;    curl \

# Grub
d-i grub-installer/grub2_instead_of_grub_legacy boolean true
d-i grub-installer/only_debian boolean true
# d-i finish-install/reboot_in_progress note

# Use non-free packages
#ubiquity ubiquity/use_nonfree boolean true
#ubiquity ubiquity/success_command string in-target apt-get update -y && apt-get install -y git curl python3 openssh-server qemu-guest-agent;

;ubiquity ubiquity/success_command \
;    string echo "auto ens18" >> /etc/network/interfaces; \
;       echo "iface ens18 inet dhcp" >> /etc/network/interfaces; \
;        ifup ens18; \
;        apt-get update -y; \
;        in-target apt-get install -y git curl python3 openssh-server qemu-guest-agent;

# Hack to install some important packages for packer to work with proxmox
ubiquity ubiquity/success_command string cp /target/etc/rc.local /target/etc/rc.local.orig; \
    nic=$(nmcli d | grep -v lo | awk 'NR>1 { print $1 }'); \
    echo "#!/bin/bash" > /target/etc/rc.local; \
    echo "" >> /target/etc/rc.local; \
    echo "touch /var/log/rclog.txt" >> /target/etc/rc.local; \
    echo "chmod 666 /var/log/rclog.txt" >> /target/etc/rc.local; \

    echo "FLAG=\"/var/log/firstboot.log\"" >> /target/etc/rc.local; \
    echo "if [ ! -f \$FLAG ]; then" >> /target/etc/rc.local; \
    echo "  connected=\$(nmcli d | grep $nic | awk '{print \$3}')" >> /target/etc/rc.local; \
    echo "  while [ \"\${connected}\" != 'connected' ]; do" >> /target/etc/rc.local; \
    echo "    sleep 2" >> /target/etc/rc.local; \
    echo "    connected=\$(nmcli d | grep $nic | awk '{print \$3}')" >> /target/etc/rc.local; \
    echo "  done" >> /target/etc/rc.local; \
    echo "  sleep 2" >> /target/etc/rc.local; \

    echo "  apt update -y > /var/log/rclog.txt 2>&1" >> /target/etc/rc.local; \
    echo "  apt install -y curl openssh-server git qemu-guest-agent wget >> /var/log/rclog.txt 2>&1" >> /target/etc/rc.local; \

    echo "  sudo systemctl restart qemu-guest-agent >> /var/log/rclog.txt 2>&1" >> /target/etc/rc.local; \
    echo "  touch $FLAG" >> /target/etc/rc.local; \
    echo "fi" >> /target/etc/rc.local; \
    echo "exit 0" >> /target/etc/rc.local; \
    chmod +x /target/etc/rc.local; \
    echo "builder ALL=(ALL) NOPASSWD: /usr/bin/apt, /usr/bin/aptitude, /usr/bin/systemctl " >> /target/etc/sudoers

# Finishing up the installation
d-i finish-install/reboot_in_progress note
ubiquity ubiquity/reboot boolean true
